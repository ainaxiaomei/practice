<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.snail.audio.admin.mapper.AppMapperExt" >
  <resultMap id="BaseResultMap" type="com.snail.audio.admin.entity.App" >
    <id column="appid" property="appid" jdbcType="INTEGER" />
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
    <result column="contacts" property="contacts" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="begin_uid" property="beginUid" jdbcType="INTEGER" />
    <result column="cur_uid" property="curUid" jdbcType="INTEGER" />
    <result column="end_uid" property="endUid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    appid, app.contacts, description, begin_uid, cur_uid, end_uid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from app
    where appid = #{appid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from app
    where appid = #{appid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.snail.audio.admin.entity.App" >
    insert into app (appid, company_id, contacts, 
      description, begin_uid, cur_uid, 
      end_uid)
    values (#{appid,jdbcType=INTEGER}, #{companyId,jdbcType=INTEGER}, #{contacts,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{beginUid,jdbcType=INTEGER}, #{curUid,jdbcType=INTEGER}, 
      #{endUid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.snail.audio.admin.entity.App" >
    insert into app
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="appid != null" >
        appid,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="contacts != null" >
        contacts,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="beginUid != null" >
        begin_uid,
      </if>
      <if test="curUid != null" >
        cur_uid,
      </if>
      <if test="endUid != null" >
        end_uid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="appid != null" >
        #{appid,jdbcType=INTEGER},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="contacts != null" >
        #{contacts,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="beginUid != null" >
        #{beginUid,jdbcType=INTEGER},
      </if>
      <if test="curUid != null" >
        #{curUid,jdbcType=INTEGER},
      </if>
      <if test="endUid != null" >
        #{endUid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.snail.audio.admin.entity.App" >
    update app
    <set >
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="contacts != null" >
        contacts = #{contacts,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="beginUid != null" >
        begin_uid = #{beginUid,jdbcType=INTEGER},
      </if>
      <if test="curUid != null" >
        cur_uid = #{curUid,jdbcType=INTEGER},
      </if>
      <if test="endUid != null" >
        end_uid = #{endUid,jdbcType=INTEGER},
      </if>
    </set>
    where appid = #{appid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.snail.audio.admin.entity.App" >
    update app
    set company_id = #{companyId,jdbcType=INTEGER},
      contacts = #{contacts,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      begin_uid = #{beginUid,jdbcType=INTEGER},
      cur_uid = #{curUid,jdbcType=INTEGER},
      end_uid = #{endUid,jdbcType=INTEGER}
    where appid = #{appid,jdbcType=INTEGER}
  </update>
</mapper>